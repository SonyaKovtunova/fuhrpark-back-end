// <auto-generated />
using System;
using Fuhrpark.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fuhrpark.Data.Migrations
{
    [DbContext(typeof(FuhrparkDataContext))]
    [Migration("20190711085545_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fuhrpark.Models.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Mobile")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("RefreshToken");

                    b.Property<DateTime?>("RefreshTokenExpires");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("Fuhrpark.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_car_core")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChassisNumber")
                        .HasColumnName("car_chassis_number")
                        .HasMaxLength(255);

                    b.Property<string>("Color")
                        .HasColumnName("car_color")
                        .HasMaxLength(255);

                    b.Property<bool>("Decommissioned")
                        .HasColumnName("car_decommissioned");

                    b.Property<int>("ManufacturerId")
                        .HasColumnName("id_manufacturer_car");

                    b.Property<string>("Model")
                        .HasColumnName("car_model")
                        .HasMaxLength(255);

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasColumnName("car_reg_number")
                        .HasMaxLength(255);

                    b.Property<int>("TypId")
                        .HasColumnName("id_typ_car");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("TypId");

                    b.ToTable("tbCarCore");
                });

            modelBuilder.Entity("Fuhrpark.Models.CarBusiness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("car_date_create");

                    b.Property<string>("Location")
                        .HasColumnName("car_location")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("car_date_update");

                    b.Property<int?>("UserId")
                        .HasColumnName("id_user_car");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tbCarCore");
                });

            modelBuilder.Entity("Fuhrpark.Models.CarSpec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Catalyst")
                        .HasColumnName("car_catalyst");

                    b.Property<string>("EngineCode")
                        .HasColumnName("car_engine_code")
                        .HasMaxLength(255);

                    b.Property<int?>("EngineDisplacement")
                        .HasColumnName("car_displacement")
                        .HasMaxLength(8);

                    b.Property<int>("EngineOilId")
                        .HasColumnName("id_engine_oil_car");

                    b.Property<int>("FuelId")
                        .HasColumnName("id_fuel_car");

                    b.Property<int>("GearOilId")
                        .HasColumnName("id_gear_oil_car");

                    b.Property<bool>("HybridDrive")
                        .HasColumnName("car_hybrid_drive");

                    b.Property<int?>("MaxSpeed")
                        .HasColumnName("car_max_speed")
                        .HasMaxLength(8);

                    b.Property<int?>("Performance")
                        .HasColumnName("car_performace")
                        .HasMaxLength(8);

                    b.Property<DateTime?>("ProductionDate")
                        .HasColumnName("car_production_date");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnName("car_registration_date");

                    b.Property<int?>("TotalWeight")
                        .HasColumnName("car_weight")
                        .HasMaxLength(8);

                    b.HasKey("Id");

                    b.HasIndex("EngineOilId");

                    b.HasIndex("FuelId");

                    b.HasIndex("GearOilId");

                    b.ToTable("tbCarCore");
                });

            modelBuilder.Entity("Fuhrpark.Models.EngineOil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_engine_oil_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("engine_oil_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("engine_oil_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("engine_oil_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbEngineOil");
                });

            modelBuilder.Entity("Fuhrpark.Models.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_fuel_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("fuel_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("fuel_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("fuel_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbFuel");
                });

            modelBuilder.Entity("Fuhrpark.Models.GearOil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_gear_oil_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("gear_oil_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("gear_oil_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("gear_oil_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbGearOil");
                });

            modelBuilder.Entity("Fuhrpark.Models.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_manufacturer_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("manufacturer_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("manufacturer_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("manufacturer_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbManufacturer");
                });

            modelBuilder.Entity("Fuhrpark.Models.Typ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_typ_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("typ_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("typ_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("typ_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbTyp");
                });

            modelBuilder.Entity("Fuhrpark.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_user_car")
                        .HasMaxLength(8)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("user_date_create");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("user_name")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("user_date_update");

                    b.HasKey("Id");

                    b.ToTable("tbUser");
                });

            modelBuilder.Entity("Fuhrpark.Models.Car", b =>
                {
                    b.HasOne("Fuhrpark.Models.Manufacturer", "Manufacturer")
                        .WithMany("Cars")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fuhrpark.Models.Typ", "Typ")
                        .WithMany("Cars")
                        .HasForeignKey("TypId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Fuhrpark.Models.CarBusiness", b =>
                {
                    b.HasOne("Fuhrpark.Models.Car", "Car")
                        .WithOne("CarBusiness")
                        .HasForeignKey("Fuhrpark.Models.CarBusiness", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fuhrpark.Models.User", "User")
                        .WithMany("Cars")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Fuhrpark.Models.CarSpec", b =>
                {
                    b.HasOne("Fuhrpark.Models.EngineOil", "EngineOil")
                        .WithMany("Cars")
                        .HasForeignKey("EngineOilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fuhrpark.Models.Fuel", "Fuel")
                        .WithMany("Cars")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fuhrpark.Models.GearOil", "GearOil")
                        .WithMany("Cars")
                        .HasForeignKey("GearOilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Fuhrpark.Models.Car", "Car")
                        .WithOne("CarSpec")
                        .HasForeignKey("Fuhrpark.Models.CarSpec", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
